version: '3'

services:
  db:
    extends:
      file: docker-compose.infra.yml
      service: db

  mongo-express:
    extends:
      file: docker-compose.infra.yml
      service: mongo-express

  rabbitmq:
     extends:
      file: docker-compose.infra.yml
      service: rabbitmq 

  azure-storage:
    image: azure-storage
    build:
      context: ./azure-storage
      dockerfile: dockerfile-dev
    container_name: video-storage
    volumes:
      - ./.tmp/azure-storage/pip-cache:/root/pip-cache
      - ./azure-storage/src:/app/src:z       
    ports:
      - "8001:80"
    env_file:
      - .env
    restart: "no"

  video-streaming:
    image: video-streaming
    build:
      context: ./video-streaming
      dockerfile: dockerfile-dev
    container_name: video-streaming
    volumes:
      - ./.tmp/video-streaming/pip-cache:/root/pip-cache
      - ./video-streaming/src:/app/src:z    
    ports:
      - 8000:80
    env_file:
      - .env
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started 

  history:
    image: history
    build:
      context: ./history
      dockerfile: dockerfile-dev
    container_name: history
    volumes:
      - ./.tmp/history/pip-cache:/root/pip-cache
      - ./history/src:/app/src:z
    ports:
      - 8002:80
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started 

  recommendations:
    image: recommendations
    build:
      context: ./recommendations
      dockerfile: dockerfile-dev
    container_name: recommendations
    volumes:
      - ./.tmp/recommendations/pip-cache:/root/pip-cache
      - ./recommendations/src:/app/src:z
    ports:
      - 8003:80
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started 

  metadata:
    image: metadata
    build:
      context: ./metadata
      dockerfile: dockerfile-dev
    container_name: metadata
    volumes:
      - ./.tmp/metadata/pip-cache:/root/pip-cache
      - ./metadata/src:/app/src:z
    ports:
      - 8004:80
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started         

  gateway:
    image: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile-dev
    container_name: gateway
    volumes:
      - ./.tmp/gateway/pip-cache:/root/pip-cache
      - ./gateway/src:/app/src:z
    ports:
      - 9000:80
    env_file:
      - .env
    depends_on:
      video-streaming:
        condition: service_started     

volumes:
  mongodb_data:
  rabbitmq_data:
  rabbitmq_logs: